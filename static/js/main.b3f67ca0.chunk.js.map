{"version":3,"sources":["GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","state","products","this","props","className","map","product","React","Component","goodsFromServer","options","App","basket","sortBy","reversed","selectValue","event","setState","currentTarget","value","visibleProduct","sort","a","b","length","reverse","filter","getVisibleProduct","type","onClick","initialBasket","reverseBasket","sortByAlphbet","resetToInitialState","sortByLength","onChange","setSelectedValue","el","ReactDOM","render","document","getElementById"],"mappings":"4OAMaA,EAAb,4MACEC,MAAQ,GADV,4CAKE,WACE,IAAQC,EAAaC,KAAKC,MAAlBF,SAER,OACE,oBAAIG,UAAU,WAAd,SACGH,EAASI,KAAI,SAACC,GAAD,OACZ,6BAGGA,GAFIA,YAZjB,GAA+BC,IAAMC,WCF/BC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,I,IAkCtCC,E,4MACJX,MAAe,CACbY,OAAQ,GACRC,OAAQ,GACRC,UAAU,EACVC,YAAa,K,sDAGf,SAAiBC,GACfd,KAAKe,SAAS,CACZF,YAAaC,EAAME,cAAcC,U,2BAIrC,WACEjB,KAAKe,SAAS,CACZL,OAAO,GAAD,OAAMH,O,2BAIhB,WACEP,KAAKe,UAAS,SAAAjB,GAAK,MAAK,CACtBc,UAAWd,EAAMc,e,2BAIrB,WACEZ,KAAKe,SAAS,CACZJ,OAAQ,iBACRC,UAAU,M,0BAId,WACEZ,KAAKe,SAAS,CACZJ,OAAQ,SACRC,UAAU,M,iCAId,WACEZ,KAAKe,SAAS,CACZJ,OAAQ,GACRC,UAAU,EACVC,YAAa,IACbH,OAAO,GAAD,OAAMH,O,oBAIhB,WAAU,IAAD,OACP,EAKIP,KAAKF,MACHoB,EAxFV,SACER,EACAC,EACAC,EACAC,GAEA,OAAQF,GACN,IAAK,iBACHD,EAAOS,OACP,MAEF,IAAK,SACHT,EAAOS,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAUvC,OAJIV,GACFF,EAAOa,UAGFb,EAAOc,QAAO,SAACpB,GAAD,OAAaA,EAAQkB,SAAWT,KAkE5BY,CANvB,EACEf,OADF,EAEEC,OAFF,EAGEC,SAHF,EAIEC,aAIF,OACE,sBAAKX,UAAU,MAAf,UACE,qBAAKA,UAAU,UAAf,SACE,oBAAIA,UAAU,QAAd,qBAIF,wBACEwB,KAAK,SACLC,QAAS,WACP,EAAKC,iBAHT,mBAQA,wBACEF,KAAK,SACLC,QAAS,WACP,EAAKE,iBAHT,qBAQA,wBACEH,KAAK,SACLC,QAAS,WACP,EAAKG,iBAHT,oCAQA,wBACEJ,KAAK,SACLC,QAAS,WACP,EAAKI,uBAHT,mBAQA,wBACEL,KAAK,SACLC,QAAS,WACP,EAAKK,gBAHT,4BAQA,wBACEf,MAAOjB,KAAKF,MAAMe,YAClBoB,SAAU,SAACnB,GACT,EAAKoB,iBAAiBpB,IAH1B,SAMGN,EAAQL,KAAI,SAAAgC,GAAE,OACb,wBAAQlB,MAAK,UAAKkB,GAAlB,SAAyBA,SAG7B,cAAC,EAAD,CAAWpC,SAAUmB,W,GAnHXb,IAAMC,WAyHTG,ICzKf2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b3f67ca0.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  products: string[]\n};\n\nexport class GoodsList extends React.Component<Props> {\n  state = {\n\n  };\n\n  render() {\n    const { products } = this.props;\n\n    return (\n      <ul className=\"products\">\n        {products.map((product: string) => (\n          <li\n            key={product}\n          >\n            {product}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst options = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nfunction getVisibleProduct(\n  basket: string[],\n  sortBy: string,\n  reversed: boolean,\n  selectValue: string,\n): string[] {\n  switch (sortBy) {\n    case 'alphabetically':\n      basket.sort();\n      break;\n\n    case 'length':\n      basket.sort((a, b) => a.length - b.length);\n      break;\n\n    default:\n  }\n\n  if (reversed) {\n    basket.reverse();\n  }\n\n  return basket.filter((product) => product.length >= +selectValue);\n}\n\ntype State = {\n  basket: string[]\n  sortBy: string\n  reversed: boolean\n  selectValue: string\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    basket: [],\n    sortBy: '',\n    reversed: false,\n    selectValue: '1',\n  };\n\n  setSelectedValue(event: React.ChangeEvent<HTMLSelectElement>) {\n    this.setState({\n      selectValue: event.currentTarget.value,\n    });\n  }\n\n  initialBasket() {\n    this.setState({\n      basket: [...goodsFromServer],\n    });\n  }\n\n  reverseBasket() {\n    this.setState(state => ({\n      reversed: !state.reversed,\n    }));\n  }\n\n  sortByAlphbet() {\n    this.setState({\n      sortBy: 'alphabetically',\n      reversed: false,\n    });\n  }\n\n  sortByLength() {\n    this.setState({\n      sortBy: 'length',\n      reversed: false,\n    });\n  }\n\n  resetToInitialState() {\n    this.setState({\n      sortBy: '',\n      reversed: false,\n      selectValue: '1',\n      basket: [...goodsFromServer],\n    });\n  }\n\n  render() {\n    const {\n      basket,\n      sortBy,\n      reversed,\n      selectValue,\n    } = this.state;\n    const visibleProduct = getVisibleProduct(basket, sortBy, reversed, selectValue);\n\n    return (\n      <div className=\"App\">\n        <div className=\"wrapper\">\n          <h1 className=\"title\">\n            Goods\n          </h1>\n        </div>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.initialBasket();\n          }}\n        >\n          Start\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.reverseBasket();\n          }}\n        >\n          Reverse\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.sortByAlphbet();\n          }}\n        >\n          Sort by alphabetically\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.resetToInitialState();\n          }}\n        >\n          Reset\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.sortByLength();\n          }}\n        >\n          Sort by length\n        </button>\n        <select\n          value={this.state.selectValue}\n          onChange={(event: React.ChangeEvent<HTMLSelectElement>) => {\n            this.setSelectedValue(event);\n          }}\n        >\n          {options.map(el => (\n            <option value={`${el}`}>{el}</option>\n          ))}\n        </select>\n        <GoodsList products={visibleProduct} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}